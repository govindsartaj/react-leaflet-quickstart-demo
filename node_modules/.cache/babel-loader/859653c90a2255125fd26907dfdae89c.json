{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\govin\\\\Desktop\\\\projects\\\\react-leaflet-quickstart\\\\src\\\\components\\\\GeoLocate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: theme.spacing(20),\n      height: theme.spacing(8)\n    },\n    zIndex: 500,\n    position: \"fixed\"\n  },\n  button: {\n    marginTop: \"1em\"\n  }\n}));\nexport default function SimplePaper(props) {\n  _s();\n\n  const classes = useStyles();\n  const [searchInput, setSearchInput] = useState([]);\n\n  const handleLocateMeClick = geo => {\n    navigator.geolocation.getCurrentPosition(result => {\n      props.parentGeolocateFunction(result);\n    });\n  };\n\n  const handleOnChange = e => {\n    setSearchInput(e.target.value);\n    console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      endIcon: /*#__PURE__*/_jsxDEV(MyLocationIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this),\n      onClick: handleLocateMeClick,\n      children: \"Locate me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimplePaper, \"XviVo52cthBdRU7GtBFX3B/5sCc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimplePaper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimplePaper\");","map":{"version":3,"sources":["C:/Users/govin/Desktop/projects/react-leaflet-quickstart/src/components/GeoLocate.js"],"names":["React","useState","makeStyles","Paper","TextField","Autocomplete","Button","MyLocationIcon","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","zIndex","position","button","marginTop","SimplePaper","props","classes","searchInput","setSearchInput","handleLocateMeClick","geo","navigator","geolocation","getCurrentPosition","result","parentGeolocateFunction","handleOnChange","e","target","value","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJ,aAAS;AACPC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAEN,KAAK,CAACK,OAAN,CAAc,EAAd,CAFA;AAGPE,MAAAA,MAAM,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd;AAHD,KAHL;AAQJG,IAAAA,MAAM,EAAE,GARJ;AASJC,IAAAA,QAAQ,EAAE;AATN,GADiC;AAavCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL;AAb+B,CAAZ,CAAD,CAA5B;AAkBA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMyB,mBAAmB,GAAIC,GAAD,IAAS;AACnCC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,MAAD,IAAY;AACnDT,MAAAA,KAAK,CAACU,uBAAN,CAA8BD,MAA9B;AACD,KAFD;AAGD,GAJD;;AAMA,QAAME,cAAc,GAAIC,CAAD,IAAO;AAC5BT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACb,IAAxB;AAAA,2BAeI,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAEa,OAAO,CAACJ,MAHrB;AAIE,MAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAJX;AAKE,MAAA,OAAO,EAAEO,mBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA1CuBL,W;UACNb,S;;;KADMa,W","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(8),\r\n    },\r\n    zIndex: 500,\r\n    position: \"fixed\",\r\n  },\r\n\r\n  button: {\r\n    marginTop: \"1em\",\r\n  },\r\n}));\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles();\r\n  const [searchInput, setSearchInput] = useState([]);\r\n\r\n  const handleLocateMeClick = (geo) => {\r\n    navigator.geolocation.getCurrentPosition((result) => {\r\n      props.parentGeolocateFunction(result);\r\n    });\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        {/* <Autocomplete\r\n          style={{ padding: 5 }}\r\n          disableClearable\r\n          options={[\"1\", \"2\"]}\r\n          open={searchInput.length >= 1}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Search input\"\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              onChange={handleOnChange}\r\n            />\r\n          )}\r\n        /> */}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          endIcon={<MyLocationIcon />}\r\n          onClick={handleLocateMeClick}\r\n        >\r\n          Locate me\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}