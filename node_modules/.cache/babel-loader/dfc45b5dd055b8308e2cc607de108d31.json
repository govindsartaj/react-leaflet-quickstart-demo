{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\govin\\\\Desktop\\\\projects\\\\react-leaflet-quickstart\\\\src\\\\components\\\\SearchContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: theme.spacing(32),\n      height: theme.spacing(16)\n    },\n    zIndex: 500,\n    position: \"fixed\"\n  },\n  button: {\n    marginTop: '1em'\n  }\n}));\nexport default function SimplePaper(props) {\n  _s();\n\n  const classes = useStyles();\n  const [searchInput, setSearchInput] = useState([]);\n\n  const handleLocateMeClick = geo => {\n    navigator.geolocation.getCurrentPosition(result => {\n      props.parentGeolocateFunction(result);\n    });\n  };\n\n  const handleOnChange = e => {\n    setSearchInput(e.target.value);\n    console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        style: {\n          padding: 5\n        },\n        disableClearable: true,\n        options: [\"1\", \"2\"],\n        open: searchInput.length >= 1,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Search input\",\n          InputProps: { ...params.InputProps,\n            type: \"search\"\n          },\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        endIcon: /*#__PURE__*/_jsxDEV(MyLocationIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }, this),\n        onClick: handleLocateMeClick,\n        children: \"Locate me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimplePaper, \"XviVo52cthBdRU7GtBFX3B/5sCc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimplePaper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimplePaper\");","map":{"version":3,"sources":["C:/Users/govin/Desktop/projects/react-leaflet-quickstart/src/components/SearchContainer.js"],"names":["React","useState","useEffect","makeStyles","Paper","TextField","Autocomplete","Button","Icon","MyLocationIcon","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","zIndex","position","button","marginTop","SimplePaper","props","classes","searchInput","setSearchInput","handleLocateMeClick","geo","navigator","geolocation","getCurrentPosition","result","parentGeolocateFunction","handleOnChange","e","target","value","console","log","padding","length","params","InputProps","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAGA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJ,aAAS;AACPC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAEN,KAAK,CAACK,OAAN,CAAc,EAAd,CAFA;AAGPE,MAAAA,MAAM,EAAEP,KAAK,CAACK,OAAN,CAAc,EAAd;AAHD,KAHL;AAQJG,IAAAA,MAAM,EAAE,GARJ;AASJC,IAAAA,QAAQ,EAAE;AATN,GADiC;AAavCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL;AAb+B,CAAZ,CAAD,CAA5B;AAkBA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAM2B,mBAAmB,GAAIC,GAAD,IAAS;AACnCC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,MAAD,IAAY;AACnDT,MAAAA,KAAK,CAACU,uBAAN,CAA8BD,MAA9B;AACD,KAFD;AAGD,GAJD;;AAMA,QAAME,cAAc,GAAIC,CAAD,IAAO;AAC5BT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACb,IAAxB;AAAA,2BACE,QAAC,KAAD;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,OAAO,EAAE;AAAX,SADT;AAEE,QAAA,gBAAgB,MAFlB;AAGE,QAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,CAHX;AAIE,QAAA,IAAI,EAAEf,WAAW,CAACgB,MAAZ,IAAsB,CAJ9B;AAKE,QAAA,WAAW,EAAGC,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,UAAU,EAAE,EAAE,GAAGA,MAAM,CAACC,UAAZ;AAAwBC,YAAAA,IAAI,EAAE;AAA9B,WAHd;AAIE,UAAA,QAAQ,EAAEV;AAJZ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,MAAD;AACA,QAAA,OAAO,EAAC,WADR;AAEA,QAAA,KAAK,EAAC,SAFN;AAGA,QAAA,SAAS,EAAEV,OAAO,CAACJ,MAHnB;AAIA,QAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAJT;AAKA,QAAA,OAAO,EAAEO,mBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA5CuBL,W;UACNb,S;;;KADMa,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n      width: theme.spacing(32),\r\n      height: theme.spacing(16),\r\n    },\r\n    zIndex: 500,\r\n    position: \"fixed\",\r\n  },\r\n\r\n  button: {\r\n    marginTop: '1em'\r\n  }\r\n}));\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles();\r\n  const [searchInput, setSearchInput] = useState([]);\r\n\r\n  const handleLocateMeClick = (geo) => {\r\n    navigator.geolocation.getCurrentPosition((result) => {\r\n      props.parentGeolocateFunction(result)\r\n    })\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper>\r\n        <Autocomplete\r\n          style={{ padding: 5 }}\r\n          disableClearable\r\n          options={[\"1\", \"2\"]}\r\n          open={searchInput.length >= 1}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Search input\"\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              onChange={handleOnChange}\r\n            />\r\n          )}\r\n        />\r\n        <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        endIcon={<MyLocationIcon/>}\r\n        onClick={handleLocateMeClick}\r\n      >\r\n        Locate me\r\n      </Button>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}