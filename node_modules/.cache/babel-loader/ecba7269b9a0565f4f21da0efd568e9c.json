{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\govin\\\\Desktop\\\\projects\\\\react-leaflet-quickstart\\\\src\\\\components\\\\GeoLocate.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\nimport TextField from \"@material-ui/core/TextField\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: theme.spacing(20),\n      height: theme.spacing(5)\n    },\n    zIndex: 500,\n    position: \"fixed\"\n  },\n  button: {\n    marginTop: \"1em\"\n  }\n}));\nexport default function GeoLocate(props) {\n  _s();\n\n  const classes = useStyles();\n\n  const handleLocateMeClick = geo => {\n    navigator.geolocation.getCurrentPosition(result => {\n      props.parentGeolocateFunction(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      endIcon: /*#__PURE__*/_jsxDEV(MyLocationIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this),\n      onClick: handleLocateMeClick,\n      children: \"Locate me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      id: \"standard-required\",\n      label: \"Required\",\n      defaultValue: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GeoLocate, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = GeoLocate;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoLocate\");","map":{"version":3,"sources":["C:/Users/govin/Desktop/projects/react-leaflet-quickstart/src/components/GeoLocate.js"],"names":["React","makeStyles","Button","MyLocationIcon","TextField","useStyles","theme","root","display","flexWrap","margin","spacing","width","height","zIndex","position","button","marginTop","GeoLocate","props","classes","handleLocateMeClick","geo","navigator","geolocation","getCurrentPosition","result","parentGeolocateFunction"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJ,aAAS;AACPC,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAEN,KAAK,CAACK,OAAN,CAAc,EAAd,CAFA;AAGPE,MAAAA,MAAM,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd;AAHD,KAHL;AAQJG,IAAAA,MAAM,EAAE,GARJ;AASJC,IAAAA,QAAQ,EAAE;AATN,GADiC;AAavCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL;AAb+B,CAAZ,CAAD,CAA5B;AAkBA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;;AAEA,QAAMgB,mBAAmB,GAAIC,GAAD,IAAS;AACnCC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,MAAD,IAAY;AACnDP,MAAAA,KAAK,CAACQ,uBAAN,CAA8BD,MAA9B;AACD,KAFD;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACb,IAAxB;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAEa,OAAO,CAACJ,MAHrB;AAIE,MAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAJX;AAKE,MAAA,OAAO,EAAEK,mBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,SAAD;AAAW,MAAA,QAAQ,MAAnB;AAAoB,MAAA,EAAE,EAAC,mBAAvB;AAA2C,MAAA,KAAK,EAAC,UAAjD;AAA4D,MAAA,YAAY,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvBuBH,S;UACNb,S;;;KADMa,S","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport TextField from \"@material-ui/core/TextField\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n      width: theme.spacing(20),\r\n      height: theme.spacing(5),\r\n    },\r\n    zIndex: 500,\r\n    position: \"fixed\",\r\n  },\r\n\r\n  button: {\r\n    marginTop: \"1em\",\r\n  },\r\n}));\r\n\r\nexport default function GeoLocate(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleLocateMeClick = (geo) => {\r\n    navigator.geolocation.getCurrentPosition((result) => {\r\n      props.parentGeolocateFunction(result);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        endIcon={<MyLocationIcon />}\r\n        onClick={handleLocateMeClick}\r\n      >\r\n        Locate me\r\n      </Button>\r\n      <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"Hello World\" />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}